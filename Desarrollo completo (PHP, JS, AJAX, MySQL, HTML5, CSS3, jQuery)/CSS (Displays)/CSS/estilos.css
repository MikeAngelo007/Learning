html {
box-sizing: border-box;
}
*, *:before, *:after {
box-sizing: inherit;
}
body {
    background-image: linear-gradient(120deg, #d4fc79 0%, #96e6a1 100%);
    font-family: Arial, Helvetica, sans-serif;
    box-sizing: border-box;
}
.container {
    max-width: 1100px;
    margin: 0 auto;
    width: 90%;
    background-color: #ffffff;
    margin-top: 60px;
    padding: 10px;
}
h1 {
    text-align: center;
    text-transform: uppercase;
    font-weight: lighter;
}
.inline span, 
.inline em, 
.inline b {
    border: 1px solid red;
    width:200px;
    height:200px;

    /*em, b, span, son elementos inline, es decir, que apesar de todo lo que se les aplique, no se desplazan verticalmente, solo horizontalmente, por lo cual nunca se saldran de la linea. Si aplicamos Padding, solo tomara el padding de los lados, no el de arriba o abajo. ________________________________________________ */

    padding: 20px 30px;

    /*Si colocamos display:block observaremos como el padding ya afecta el elemento tanto horizontal como verticalmente.*/

    /* display: block; */
}

.inline-block span,
.inline-block em, 
.inline-block b{
    /*Con inline-block, se aplica el padding y el elemento si se desplaza vertical y horizontalmente PERO mantiene la linea, como en inline.*/
    display: inline-block;
    height: 50px; 
    width:250px;
    padding: 20px;
}

.block p {
    /*Block aplica el padding y todas las caracteristicas que le digamos, pero a diferencia de inline, ubica los elementos uno sobre el otro y toman todo el espacio disponible... a menos de que se le indique un tamaño especifico*/
    border: 1px solid red;

}
.block h1{
    display: inline;
    
}

.none p{
/*Display none eliminara el elemento visualmente, es decir, no sera visible en la pagina pero seguira existiendo en el codigo.*/
display: none;
}

.none h1{
    text-align: center;
    /* display: none; */
}

.contenedor-flex {
    /*Display flex lo mistrara en flex-box (Todo en conjunto y no separado)*/
    display: flex;
    /*flex-direction lo mostrara en columna o en fila*/
    flex-direction: row;

    /*Mostrara todo sin cambiar su tamaño, asi sea necesario usar varias filas. Si no se tuviera, mostraria todo mas pequeño pero en una sola fila (o columna)*/
    flex-wrap: wrap;

    /*Flex-start es por defecto, pero flex-end lo alinea todo hacia el final de la fila, mientras flex-start lo alinea todo hacia el inicio*/
    justify-content: flex-start;
    justify-content: flex-end;

    /*center no los lleva ni al inicio ni al final de la fila, sino al centro*/
    justify-content: center;
     /*Space-around crea un espacio alrededor de los elementos*/
    justify-content: space-around;
    /*Space-around crea un espacio entre los elementos*/
    justify-content: space-between;

}
.contenedor-flex div {
    width: 200px;
    height:200px;
}
.contenedor-flex div:nth-child(1),
.contenedor-flex div:nth-child(9) {
    background-color:aqua;
}
.contenedor-flex div:nth-child(2),
.contenedor-flex div:nth-child(8)  {
    background-color:blueviolet;
}
.contenedor-flex div:nth-child(3),
.contenedor-flex div:nth-child(7) {
    background-color:brown;
}
.contenedor-flex div:nth-child(4), 
.contenedor-flex div:nth-child(6) {
    background-color:forestgreen;
}
.contenedor-flex div:nth-child(5) {
    background-color:darkslategray;
}